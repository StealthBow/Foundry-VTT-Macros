{
  "name": "Custom Weapon Template",
  "type": "script",
  "scope": "global",
  "command": "//Form Defaults, modify as required.\nlet formTitle = \"Attack & Damage Roll\"; //Default title for pop-up.\nlet accDefault = 0; //Default Accuracy (e.g. Accurate Tag).\nlet difDefault = 0; //Default Difficulty (e.g. Inaccurate Tag).\n\n//Pilot Details, modify as required.\nlet grit = 0; //Pilot GRIT.\nlet brutalTalent = false; //(true/false) When rolling nat 20 and getting a crit, roll max damage.\n\n//Attack Details, modify as required.\nlet rollDetails = \"Assault Rifle Attack\"; //(e.g. \"Tech Attack\"). This will appear above the main roll in chat.\n\n//Weapon Details, modify as required.\nlet numDice = 1; //Number of dice a weapon uses for damage, e.g. Assault Rifle uses 1d6.\nlet diceType = \"d3\"; //Type of dice for damage (d3/d6).\nlet damageMod = 0; //Any +/- bonuses to damage.\nlet damageDetails = \"Kinetic Damage, Reliable 2\"; //(e.g. \"Kinetic Damage, AP\"). This will appear above the damage roll in chat.\nlet overkill = false; //(true/false) Will re-roll 1's in damage and calculate how much heat you generated.\nlet overkillMsgOrRoll = false; //(true/false) Whether the Overkill Heat displays as a Chat Message (false) or a Roll (true). \n\n\n\n\n//Script below here.\nlet run = false;\nnew Dialog({\n  title: `${formTitle}`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Accuracy:</label>\n        <input type=\"number\" id=\"acc-input\" name=\"acc-input\" value=\"${accDefault}\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Difficulty:</label>\n        <input type=\"number\" id=\"dif-input\" name=\"dif-input\" value=\"${difDefault}\"/>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Roll!`,\n      callback: () => run = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (run) {\n      let accDif = (html.find('[name=\"acc-input\"]')[0].value) - (html.find('[name=\"dif-input\"]')[0].value);\n\n      let attackRollFormula = `d20`;\n      if (accDif != 0){ attackRollFormula += `+${accDif}d6kh`; }\n      if (grit != 0) {attackRollFormula += `+${grit}` };\n\n      let attack = new Roll(attackRollFormula).roll();\n\n      let damageRollFormula = ``;\n      if (attack.total >= 20) {\n        if (brutalTalent && (attack.parts[0].results[0] == 20)) {\n          damageRollFormula = `(${numDice}*${diceType[1]})`;\n        } else {\n          damageRollFormula = `(2*${numDice})${diceType}`+(overkill ? `x1` : ``)+`kh${numDice}`;\n        }\n      }\n      else {\n        damageRollFormula = `${numDice}${diceType}`+(overkill ? `x1kh${numDice}` : ``);\n      }\n      if (damageMod != 0) {damageRollFormula += `+${damageMod}`}\n      \n      let damageDealt = new Roll(damageRollFormula).roll();\n      \n      let heat = 0;\n      if (overkill && !brutalTalent) { damageDealt.parts[0].rolls.forEach(d => { if (d.exploded) {++heat;} }) }\n            \n      attack.toMessage({flavor: rollDetails});\n      damageDealt.toMessage({flavor: damageDetails});\n      \n      if (heat != 0) {\n        if (overkillMsgOrRoll) { new Roll(`${heat}`).roll().toMessage({flavor: `Overkill Heat`}) }\n        else { ChatMessage.create({content: `Overkill Heat: ${heat}`}, {}); }\n      }\n    }\n  }\n}).render(true);",
  "img": "icons/svg/dice-target.svg"
}