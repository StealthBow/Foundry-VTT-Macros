{
  "name": "Damage Roll",
  "type": "script",
  "scope": "global",
  "command": "//Form Defaults, modify as required.\r\nlet formTitle = \"Damage Roll\"; //Default title for pop-up.\r\nlet numDiceDefault = 1; //Default number of dice to roll.\r\nlet diceTypeDefault = \"d3\"; //(d3/d6) Default type of dice in drop-down menu.\r\nlet modDefault = 0; //Default damage modifier.\r\nlet critDefault = false; //(true/false) Default to ticking crit or not.\r\nlet damageDetailsDefault = \"Damage\"; //Extra notes section (e.g. \"Kinetic Damage, AP\"). This will appear above the dice roll in chat.\r\n\r\n\r\n\r\n//Script below here.\r\nlet run = false;\r\nnew Dialog({\r\n  title: `${formTitle}`,\r\n  content: `\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label>Number of Dice:</label>\r\n        <input type=\"number\" id=\"num-dice-input\" name=\"num-dice-input\" value=\"${numDiceDefault}\"/>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Type:</label>\r\n        <select id=\"type-input\" name=\"type-input\">\r\n          <option value=\"d3\"` + ((diceTypeDefault == \"d3\") ? ` selected` : ``) + `>d3</option>\r\n          <option value=\"d6\"` + ((diceTypeDefault == \"d6\") ? ` selected` : ``) + `>d6</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Modifier:</label>\r\n        <input type=\"number\" id=\"mod-input\" name=\"mod-input\" value=\"${modDefault}\"/>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Crit?</label>\r\n        <input type=\"checkbox\" id=\"crit-input\" name=\"crit-input\"` + (critDefault ? ` checked` : ``) + `/>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Damage Details:</label>\r\n        <input type=\"text\" id=\"dmgDet-input\" name=\"dmgDet-input\" value=\"${damageDetailsDefault}\"/>\r\n      </div>\r\n    </form>\r\n    `,\r\n  buttons: {\r\n    yes: {\r\n      icon: \"<i class='fas fa-check'></i>\",\r\n      label: `Roll!`,\r\n      callback: () => run = true\r\n    },\r\n    no: {\r\n      icon: \"<i class='fas fa-times'></i>\",\r\n      label: `Cancel`\r\n    },\r\n  },\r\n  default: \"yes\",\r\n  close: html => {\r\n    if (run) {\r\n      let numDice = html.find('[name=\"num-dice-input\"]')[0].value;\r\n      let diceType = html.find('[name=\"type-input\"]')[0].value;\r\n      let mod = html.find('[name=\"mod-input\"]')[0].value;\r\n      let crit = html.find('[name=\"crit-input\"]')[0].checked;\r\n      let damageDetails = html.find('[name=\"dmgDet-input\"]')[0].value;\r\n      let damageRollFormula = `${diceType}`;\r\n      if (crit) {\r\n        damageRollFormula = `(2*${numDice})` + damageRollFormula + `kh${numDice}`;\r\n      } else {\r\n        damageRollFormula = `${numDice}` + damageRollFormula;\r\n      }\r\n      if (mod != 0) { damageRollFormula += `+${mod}`; }\r\n      \r\n      let damageDealt = new Roll(damageRollFormula).roll();\r\n      damageDealt.toMessage({flavor: damageDetails});\r\n    }\r\n  }\r\n}).render(true);",
  "img": "icons/svg/dice-target.svg"
}