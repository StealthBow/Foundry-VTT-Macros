{
  "name": "Damage Roll",
  "type": "script",
  "scope": "global",
  "command": "//Form Defaults, modify as required.\nlet formTitle = \"Damage Roll\"; //Default title for pop-up.\nlet numDiceDefault = 1; //Default number of dice to roll.\nlet diceTypeDefault = \"d3\"; //(d3/d6) Default type of dice in drop-down menu.\nlet modDefault = 0; //Default damage modifier.\nlet critDefault = false; //(true/false) Default to ticking crit or not.\nlet damageDetailsDefault = \"Damage\"; //Extra notes section (e.g. \"Kinetic Damage, AP\"). This will appear above the dice roll in chat.\nlet overkillDefault = false; //(true/false) Will re-roll 1's in damage and calculate how much heat you generated.\nlet overkillMsgOrRoll = false; //(true/false) Whether the Overkill Heat displays as a Chat Message (false) or a Roll (true). \n\n\n\n//Script below here.\nlet run = false;\nnew Dialog({\n  title: `${formTitle}`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Number of Dice:</label>\n        <input type=\"number\" id=\"num-dice-input\" name=\"num-dice-input\" value=\"${numDiceDefault}\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Type:</label>\n        <select id=\"type-input\" name=\"type-input\">\n          <option value=\"d3\"` + ((diceTypeDefault == \"d3\") ? ` selected` : ``) + `>d3</option>\n          <option value=\"d6\"` + ((diceTypeDefault == \"d6\") ? ` selected` : ``) + `>d6</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Modifier:</label>\n        <input type=\"number\" id=\"mod-input\" name=\"mod-input\" value=\"${modDefault}\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>Crit?</label>\n        <input type=\"checkbox\" id=\"crit-input\" name=\"crit-input\"` + (critDefault ? ` checked` : ``) + `/>\n      </div>\n      <div class=\"form-group\">\n        <label>Overkill?</label>\n        <input type=\"checkbox\" id=\"ovk-input\" name=\"ovk-input\"` + (overkillDefault ? ` checked` : ``) + `/>\n      </div>\n      <div class=\"form-group\">\n        <label>Damage Details:</label>\n        <input type=\"text\" id=\"dmgDet-input\" name=\"dmgDet-input\" value=\"${damageDetailsDefault}\"/>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Roll!`,\n      callback: () => run = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (run) {\n      let numDice = html.find('[name=\"num-dice-input\"]')[0].value;\n      let diceType = html.find('[name=\"type-input\"]')[0].value;\n      let mod = html.find('[name=\"mod-input\"]')[0].value;\n      let crit = html.find('[name=\"crit-input\"]')[0].checked;\n      let overkill = html.find('[name=\"ovk-input\"]')[0].checked;\n      let damageDetails = html.find('[name=\"dmgDet-input\"]')[0].value;\n      let damageRollFormula = ``;\n      if (crit) {\n        damageRollFormula = `(2*${numDice})${diceType}` + (overkill ? `x1` : ``) + `kh${numDice}`;\n      } else {\n        damageRollFormula = `${numDice}${diceType}` + (overkill ? `x1kh${numDice}` : ``);\n      }\n      if (mod != 0) { damageRollFormula += `+${mod}`; }\n      \n      let damageDealt = new Roll(damageRollFormula).roll();\n      \n      let heat = 0;\n      if (overkill) { damageDealt.parts[0].rolls.forEach(d => { if (d.exploded) {++heat;} }) }\n      \n      damageDealt.toMessage({flavor: damageDetails});\n      \n      if (heat != 0) {\n        if (overkillMsgOrRoll) { new Roll(`${heat}`).roll().toMessage({flavor: `Overkill Heat`}) }\n        else { ChatMessage.create({content: `Overkill Heat: ${heat}`}, {}); }\n      }\n    }\n  }\n}).render(true);",
  "img": "icons/svg/dice-target.svg"
}